# Generated by Django 4.0.8 on 2022-11-30 12:54

from django.db import migrations


def fix_match_type(apps, schema_editor):
    Match = apps.get_model("player_lookup", "Match")
    # Due to server's very limited capacity, we can't update all Matches at once.
    match_generator = Match.objects.all().iterator()
    nb_of_matches = Match.objects.count()
    update_list = []
    for counter, match in enumerate(match_generator):
        print(f"Updating match {counter + 1}/{nb_of_matches}"
              f" ({round(counter/nb_of_matches, 4)*100}%)", end="\r")
        related_match_issue = match.matchissue_set.first()

        if not related_match_issue:
            continue

        match_outcome = related_match_issue.outcome
        trophies_won = related_match_issue.trophies_won
        if match_outcome == "WIN":
            if trophies_won == 9:
                is_power_match = True
            elif trophies_won == 7:
                is_power_match = True
            elif trophies_won == 4:
                is_power_match = False
            elif trophies_won == 3:
                is_power_match = False
        elif match_outcome == "LOSS":
            if trophies_won == 5:
                is_power_match = True
            elif trophies_won == 3:
                is_power_match = True
            elif trophies_won == 2:
                is_power_match = False
            elif trophies_won == 1:
                is_power_match = False

        # Can't draw in Power matches
        elif match_outcome == "DRAW":
            is_power_match = False

        if is_power_match:
            battle_type = "Power Match"
        else:
            battle_type = "Normal Match"

        if match.battle_type != battle_type:
            match.battle_type = battle_type
            update_list.append(match)

        if len(update_list) >= 500:
            Match.objects.bulk_update(update_list, ["battle_type"])
            update_list = []


class Migration(migrations.Migration):

    dependencies = [
        ('player_lookup', '0008_playersupdate_club_league_running'),
    ]

    operations = [
        migrations.RunPython(fix_match_type, reverse_code=migrations.RunPython.noop),
    ]
