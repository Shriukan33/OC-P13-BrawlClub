# Generated by Django 4.0.4 on 2022-05-04 22:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import player_lookup.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brawler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('image', models.ImageField(upload_to='brawlers/')),
            ],
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('club_name', models.CharField(max_length=50)),
                ('club_tag', models.CharField(max_length=9, unique=True)),
                ('club_rank', models.CharField(choices=[('bronze_1', 'Bronze I'), ('bronze_2', 'Bronze II'), ('bronze_3', 'Bronze III'), ('silver_1', 'Silver I'), ('silver_2', 'Silver II'), ('silver_3', 'Silver III'), ('gold_1', 'Gold I'), ('gold_2', 'Gold II'), ('gold_3', 'Gold III'), ('diamond_1', 'Diamond I'), ('diamond_2', 'Diamond II'), ('diamond_3', 'Diamond III'), ('mythic_1', 'Mythic I'), ('mythic_2', 'Mythic II'), ('mythic_3', 'Mythic III'), ('legendary_1', 'Legendary I'), ('legendary_2', 'Legendary II'), ('legendary_3', 'Legendary III'), ('masters', 'Masters')], default='bronze_1', max_length=20)),
                ('club_rank_image', models.ImageField(default='club_ranks/bronze_1.png', upload_to='club_ranks')),
                ('club_description', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('image', models.ImageField(upload_to='maps/')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.CharField(max_length=20)),
                ('battle_type', models.CharField(max_length=20)),
                ('date', models.DateTimeField()),
                ('map', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='player_lookup.map')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_tag', models.CharField(max_length=9, unique=True)),
                ('player_name', models.CharField(max_length=50)),
                ('trophy_count', models.IntegerField(default=0)),
                ('total_club_war_trophy_count', models.IntegerField(default=0)),
                ('club', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='player_lookup.club', validators=[player_lookup.models.limit_number_of_players])),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MatchIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_won', models.BooleanField(default=False)),
                ('trophies_won', models.IntegerField(default=0)),
                ('brawler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player_lookup.brawler')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player_lookup.match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player_lookup.player')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='players',
            field=models.ManyToManyField(to='player_lookup.player'),
        ),
    ]
